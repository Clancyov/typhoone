# i useed these librarys to do my job
"""
    # the arabic reshaper is for ordering persian words in rtl format ,etc
    # the bidi.a;gorithm is for display and draw persian words
    # pil is the heaart of this project /its for drawing 
    # we need datatime to get gregorian datetime from the system
    # persiantools is for converting date from gregorian to jalali
    # the csv library is for reading csv fiels
    # numpy is used to working with arrays
    # bigtree is for making a tree to store informations 
    """
import arabic_reshaper
from bidi.algorithm import get_display
from PIL import Image, ImageFont, ImageDraw
from datetime import datetime,date
from persiantools.jdatetime import JalaliDate
import datetime
import csv
import numpy as np
from bigtree import Node,print_tree

#import_fonts
# iransans
    # for first page
fontt=ImageFont.truetype('C:\\Users\\Achak\\Desktop\\graphiccs\\IRANSans_Black.ttf',85,encoding='unic')
    # prices in other pages
font1=ImageFont.truetype('C:\\Users\\Achak\\Desktop\\graphiccs\\IRANSans_Black.ttf',40,encoding='unic')

#getting gregorian date and time from system then converting to jalali
gregorian_date=str(date.today()).split("-",2)
jalalian_date=str(JalaliDate(datetime.date(int(gregorian_date[0]),int(gregorian_date[1]),int(gregorian_date[2])))).split('-',2)
today_date=jalalian_date[0]+"/"+jalalian_date[1]+"/"+jalalian_date[2]

#making the Data structure and reading data and sorting it and putting it inside data structure
    # reading and sorting csv files datas in an array
prices=np.array([])
with open('C:\\Users\\Achak\\Desktop\\graphiccs\\typhoone\\test prices\\prices.csv', mode ='r')as file:
    csvFile=csv.reader(file)
    for line in csvFile:
        prices = np.append(prices,[line])
    # the tree's nodes
Images=Node("/")
Image1=Node("I1",path="C:\\Users\\Achak\\Desktop\\graphiccs\\typhoone\\sample lists\\Ahan_Alat\\1.jpg",parent=Images,priceL=prices[0:12],poses=np.array([70,172]))
Image2=Node("I2",path="C:\\Users\\Achak\\Desktop\\graphiccs\\typhoone\\sample lists\\Ahan_Alat\\2.jpg",parent=Images,priceL=prices[12:24],poses=np.array([70,172]))
Image3=Node("I3",path="C:\\Users\\Achak\\Desktop\\graphiccs\\typhoone\\sample lists\\Ahan_Alat\\3.jpg",parent=Images,priceL=prices[24:36],poses=np.array([70,172]))
Image4=Node("I4",path="C:\\Users\\Achak\\Desktop\\graphiccs\\typhoone\\sample lists\\Ahan_Alat\\4.jpg",parent=Images,priceL=prices[36:46],poses=np.array([70,172]))
Image5=Node("I5",path="C:\\Users\\Achak\\Desktop\\graphiccs\\typhoone\\sample lists\\Ahan_Alat\\5.jpg",parent=Images,priceL=prices[46:56],poses=np.array([70,172]))
Image6=Node("I6",path="C:\\Users\\Achak\\Desktop\\graphiccs\\typhoone\\sample lists\\Ahan_Alat\\6.jpg",parent=Images,priceL=prices[56:65],poses=np.array([70,172]))
Image7=Node("I7",path="C:\\Users\\Achak\\Desktop\\graphiccs\\typhoone\\sample lists\\Ahan_Alat\\7.jpg",parent=Images,priceL=prices[65:73],poses=np.array([70,172]))
Image8=Node("I8",path="C:\\Users\\Achak\\Desktop\\graphiccs\\typhoone\\sample lists\\Ahan_Alat\\8.jpg",parent=Images,priceL=prices[73:80],poses=np.array([70,172]))
Image9=Node("I9",path="C:\\Users\\Achak\\Desktop\\graphiccs\\typhoone\\sample lists\\Ahan_Alat\\9.jpg",parent=Images,priceL=prices[80:86],poses=np.array([70,172]))

# for writing needed things on first page
def Write_On_First_Image():
    A_Heading_Text="قیمت آهن آلات"
    A_Heading=get_display(arabic_reshaper.reshape(A_Heading_Text)).encode().decode('utf-8')
    image0=Image.open("C:\\Users\\Achak\\Desktop\\graphiccs\\ahan alat\\export\\V2\\Ahan_Alat_v2-0.jpg")
    draw=ImageDraw.Draw(image0)
    draw.text((20,900),today_date,(100,100,100),font=fontt)
    draw.text((480,820),A_Heading,(255,5,5),font=fontt)
    image0.show()

# for writing each price on its place
def Write_Price(Current_Image,Price,pose):    
    draw=ImageDraw.Draw(Current_Image)           
    draw.text((pose[0],pose[1]),str(Price),(0,0,0),font=font1)

# for iteration in the tree and decide what to draw and where to draw
def Iterate_And_Draw():
    for image in range (1,10):
        t=(globals()["Image"+str(image)])
        Current_Image=Image.open(t.path)
        for price in t.priceL:
            if(int(price)!=0):
                if(10000000>int(price)>999999):
                    t.poses[0]=49
                elif(int(price)>9999999):
                    t.poses[0]=38  
                Write_Price(Current_Image,price,t.poses)
            t.poses[1]+=68
        Current_Image.show()

# for driving the program
def main():
    Write_On_First_Image()
    Iterate_And_Draw()

# calling the driver
main()